<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under
  ~ one or more contributor license agreements. See the NOTICE file distributed
  ~ with this work for additional information regarding copyright ownership.
  ~ Licensed under the Camunda License 1.0. You may not use this file
  ~ except in compliance with the Camunda License 1.0.
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.camunda.db.rdbms.sql.AuthorizationMapper">

  <select id="count" parameterType="io.camunda.db.rdbms.read.domain.AuthorizationDbQuery">
    SELECT COUNT(*)
    FROM AUTHORIZATIONS
    <include refid="io.camunda.db.rdbms.sql.AuthorizationMapper.searchFilter"/>
  </select>

  <select id="search" parameterType="io.camunda.db.rdbms.read.domain.AuthorizationDbQuery"
    resultMap="io.camunda.db.rdbms.sql.AuthorizationMapper.authorizationResultMap">
    SELECT
    OWNER_KEY,
    OWNER_TYPE,
    RESOURCE_TYPE,
    PERMISSION_TYPE,
    RESOURCE_ID
    FROM AUTHORIZATIONS
    <include refid="io.camunda.db.rdbms.sql.AuthorizationMapper.searchFilter"/>
    <include refid="io.camunda.db.rdbms.sql.Commons.keySetPageFilter"/>
    <!-- inner orderBy for keyset pagination -->
    <include refid="io.camunda.db.rdbms.sql.Commons.orderBy"/>
    <include refid="io.camunda.db.rdbms.sql.Commons.paging"/>
  </select>

  <sql id="searchFilter">
    WHERE 1 = 1
    <if test="filter.ownerType != null">AND OWNER_TYPE = #{filter.ownerType}</if>
    <if test="filter.resourceType != null">AND RESOURCE_TYPE = #{filter.resourceType}</if>
    <if test="filter.permissionType != null">AND PERMISSION_TYPE = #{filter.permissionType}</if>
    <if test="filter.ownerKeys != null and !filter.ownerKeys.isEmpty()">
      AND OWNER_KEY IN
      <foreach collection="filter.ownerKeys" item="value" open="(" separator=", " close=")"> #{value}
      </foreach>
    </if>
    <if test="filter.resourceIds != null and !filter.resourceIds.isEmpty()">
      AND RESOURCE_ID IN
      <foreach collection="filter.resourceIds" item="value" open="(" separator=", " close=")">
        #{value}
      </foreach>
    </if>
  </sql>

  <resultMap id="authorizationResultMap"
    type="io.camunda.db.rdbms.write.domain.AuthorizationDbModel">
    <id column="OWNER_KEY" property="ownerKey"/>
    <id column="OWNER_TYPE" property="ownerType"/>
    <id column="RESOURCE_TYPE" property="resourceType"/>
    <id column="PERMISSION_TYPE" property="permissionType"/>
    <id column="RESOURCE_ID" property="resourceId"/>
  </resultMap>

  <insert id="insert" parameterType="io.camunda.db.rdbms.write.domain.AuthorizationDbModel"
    flushCache="true">
    INSERT INTO AUTHORIZATIONS (OWNER_KEY, OWNER_TYPE, RESOURCE_TYPE, PERMISSION_TYPE, RESOURCE_ID)
    VALUES (#{ownerKey}, #{ownerType}, #{resourceType}, #{permissionType}, #{resourceId})
  </insert>

  <delete id="delete" parameterType="io.camunda.db.rdbms.write.domain.AuthorizationDbModel"
    flushCache="true">
    DELETE FROM AUTHORIZATIONS
    WHERE OWNER_KEY = #{ownerKey}
      AND OWNER_TYPE = #{ownerType}
      AND RESOURCE_TYPE = #{resourceType}
      AND PERMISSION_TYPE = #{permissionType}
      AND RESOURCE_ID = #{resourceId}
  </delete>

</mapper>
