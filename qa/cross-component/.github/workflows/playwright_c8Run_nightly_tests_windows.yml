name: C8Run Nightly Test Run - Windows

on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build_c8run:
    name: Build C8Run and Execute E2E Tests
    runs-on: windows-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        version: ['c8Run-8.7']
        project: ['chromium']
    steps:
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@d1720f055e0635fd932a1d2a48f87a666a57906c # v3.0.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/qa/ci/common NEXUS_USERNAME;
            secret/data/products/qa/ci/common NEXUS_PASSWORD;

      - name: Generate a GitHub token for camunda/camunda repo
        id: github-token
        uses: camunda/infra-global-github-actions/generate-github-app-token-from-vault-secrets@main
        with:
          github-app-id-vault-key: GITHUB_APP_ID
          github-app-id-vault-path: secret/data/products/qa/ci/github.com/apps/camunda/quality-assurance-ci
          github-app-private-key-vault-key: GITHUB_APP_SECRET
          github-app-private-key-vault-path: secret/data/products/qa/ci/github.com/apps/camunda/quality-assurance-ci
          vault-auth-method: approle
          vault-auth-role-id: ${{ secrets.VAULT_ROLE_ID }}
          vault-auth-secret-id: ${{ secrets.VAULT_SECRET_ID}}
          vault-url: ${{ secrets.VAULT_ADDR }}
          owner: camunda
          repositories: camunda

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: git configure long path
        run: git config --global core.longpaths true

      - name: Checkout camunda repo
        uses: actions/checkout@v4
        with:
          repository: camunda/camunda
          path: camunda

      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.23.1'
          cache: false # disabling since not working anyways without a cache-dependency-path specified

      - name: Make a package
        run: .\package.bat
        working-directory: .\camunda\c8run
        env:
          GH_TOKEN: ${{ steps.github-token.outputs.token }}
          JAVA_ARTIFACTS_USER: ${{ steps.secrets.outputs.NEXUS_USERNAME }}
          JAVA_ARTIFACTS_PASSWORD: ${{ steps.secrets.outputs.NEXUS_PASSWORD }}

      - name: ls
        run: ls
        working-directory: .\camunda\c8run

      - name: ls
        run: ls
        working-directory: .\camunda\c8run\elasticsearch-8.13.4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '22'

      - name: Set JAVA_HOME environment variable
        run: echo "JAVA_HOME=$env:JAVA_HOME_22_X64" >> $env:GITHUB_ENV

      - name: Run c8run
        run: .\c8run.exe start
        working-directory: .\camunda\c8run
        shell: cmd
        env:
          JAVA_VERSION: '22.0.2'

      - name: Set version as GitHub variable
        run: echo "VERSION=${{ matrix.version }}" >> $GITHUB_ENV

      - name: Run tests
        uses: ./.github/actions/run-tests-c8Run-nightly-windows
        with:
          version: ${{ matrix.version }}
          project: ${{ matrix.project }}
          c8run_connectors_api_url: ${{ secrets.C8RUN_CONNECTORS_API_URL }}
          testrail_qa_email: ${{ secrets.TESTRAIL_QA_EMAIL }}
          testrail_qa_key: ${{ secrets.TESTRAIL_QA_KEY }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: c8-run-logs
          path: ./camunda/c8run/log/*.log
          retention-days: 10
