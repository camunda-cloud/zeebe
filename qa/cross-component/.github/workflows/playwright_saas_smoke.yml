name: C8 Prod SaaS Smoke Test Run

on:
  workflow_dispatch:
    inputs:
      c8Version:
        description: 'C8 Minor Version'
        required: true
      clusterGenerationName:
        description: 'Cluster Generation Name'
        required: true
        
concurrency:
  group: c8-prod-saas-smoke-${{ github.workflow }}-${{ github.event.inputs.clusterGenerationName }}
  cancel-in-progress: false

defaults:
  run:
    # use bash shell by default to ensure pipefail behavior is the default
    # see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#exit-codes-and-error-action-preference
    shell: bash

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npx eslint . --ext .ts
  
  run-tests-smoke:
    name: Run tests
    needs: [lint]
    runs-on: 'gcp-core-32-longrunning-big-ssd'
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        version: ['${{ github.event.inputs.clusterGenerationName }}']
        project: ['chromium']
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Run tests
        uses: ./.github/actions/run-tests-smoke
        with:
          version: ${{ github.event.inputs.c8Version }}
          project: ${{ matrix.project }}
          c8_username: ${{ secrets.C8_USERNAME_PROD }}
          c8_password: ${{ secrets.C8_PASSWORD }}
          c8_username_test: ${{ secrets.C8_USERNAME_TEST }}
          c8_password_test: ${{ secrets.C8_PASSWORD_TEST }}
          c8_invalid_username: ${{ secrets.C8_INVALID_USERNAME }}
          testrail_qa_email: ${{ secrets.TESTRAIL_QA_EMAIL }}
          testrail_qa_key: ${{ secrets.TESTRAIL_QA_KEY }}
          c8Version: ${{ github.event.inputs.c8Version }}
          clusterGenerationName: ${{ github.event.inputs.clusterGenerationName }}
          regionSelection: ${{ secrets.REGION_SELECTION }}