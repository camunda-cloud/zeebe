name: 'Run E2E for c8Run distro with Windows'
description: 'A Github action to run E2E tests and publish results'

inputs:
  project:
    description: 'Chromium, Firefox, or Edge'
    required: true
  version:
    description: 'c8Run version'
    required: true
  testrail_qa_email:
    description: 'TestRail QA email'
    required: true
  testrail_qa_key:
    description: 'TestRail QA key'
    required: true
  c8Version:
    description: 'C8 Version'
    required: true
  c8run_connectors_api_url:
    description: 'Connectors api url'
    required: true

runs:
  using: composite
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - name: Install dependencies
      shell: bash
      run: npm ci

    - name: Install Playwright Browsers
      shell: bash
      run: npx playwright install --with-deps ${{ inputs.project }}
    - name: Python setup
      if: always()
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Set minor version
      shell: bash
      run: |
        c8_version="${{ github.event.inputs.c8Version }}"
        minor_version="c8Run-${c8_version}"
        echo "minor_version=$minor_version" >> $GITHUB_ENV
    - name: Run tests
      shell: bash
      env:
        CLUSTER_VERSION: ${{ inputs.version }}
        MINOR_VERSION: ${{ env.minor_version }}
        C8RUN_CONNECTORS_API_URL: ${{ inputs.c8run_connectors_api_url  }}
      run: npm run test -- --project=${{ inputs.project }}
    - name: Publish test results to TestRail
      if: always()
      shell: bash
      env:
        TESTRAIL_HOST: 'https://camunda.testrail.com/'
        TESTRAIL_USERNAME: ${{ inputs.testrail_qa_email }}
        TESTRAIL_KEY: ${{ inputs.testrail_qa_key }}
        JUNIT_RESULTS_FILE: './test-results/junit-report.xml'
      run: |
        pip install trcli
        trcli -y -h $TESTRAIL_HOST \
          --project 'C8' \
          --username $TESTRAIL_USERNAME \
          --key $TESTRAIL_KEY \
          parse_junit --title "TESTRAIL_TITLE=c8Run Test Results - Windows - ${{ inputs.version }} - $(date '+%Y-%m-%d %H:%M:%S')" \
          --close-run \
          -f $JUNIT_RESULTS_FILE
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Playwright Report
        path: ./html-report
        retention-days: 30
