---
name: CI

on:
  push: {}
  pull_request: {}
  merge_group: {}
  workflow_dispatch: {}

# Limit workflow to 1 concurrent run per ref (branch): new commit -> old runs are canceled to save costs
# Exception for main branch: complete builds for every commit needed for confidenence
# Exception for deploy jobs that have to wait for each other to avoid overwriting
concurrency:
  cancel-in-progress: true
  group: ${{ format('{0}-{1}', github.workflow, github.ref == 'refs/heads/main' && github.sha || github.ref) }}

defaults:
  run:
    # use bash shell by default to ensure pipefail behavior is the default
    # see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#exit-codes-and-error-action-preference
    shell: bash

env:
  DOCKER_PLATFORMS: "linux/amd64,linux/arm64"

jobs:
  elasticsearch-integration-tests:
    name: "[IT] Elasticsearch"
    timeout-minutes: 25
    permissions: {}  # GITHUB_TOKEN unused in this job
    runs-on: gcp-perf-core-8-default
    env:
      ZEEBE_TEST_DOCKER_IMAGE: localhost:5000/camunda/zeebe:current-test
    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
        ports:
          - 9200:9200
        env:
          xpack.security.enabled: "false"
          discovery.type: "single-node"
          action.destructive_requires_name: "false"
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-build
        with:
          maven-cache-key-modifier: it-elasticsearch
          vault-address: ${{ secrets.VAULT_ADDR }}
          vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
          vault-secret-id: ${{ secrets.VAULT_SECRET_ID }}
      - uses: ./.github/actions/build-zeebe
        id: build-zeebe
        with:
          maven-extra-args: -T1C -PskipFrontendBuild
      - uses: ./.github/actions/build-platform-docker
        with:
          repository: localhost:5000/camunda/zeebe
          version: current-test
          push: true
          distball: ${{ steps.build-zeebe.outputs.distball }}
      - name: Create build output log file
        run: echo "BUILD_OUTPUT_FILE_PATH=$(mktemp)" >> $GITHUB_ENV
      - name: Validate connection with ES
        run: curl http://localhost:9200
      - name: Maven Test Build
        run: >
          ./mvnw -B -T 2 --no-snapshot-updates
          -D forkCount=7
          -D maven.javadoc.skip=true
          -D skipUTs -D skipChecks
          -D failsafe.rerunFailingTestsCount=3 -D flaky.test.reportDir=failsafe-reports
          -P parallel-tests,extract-flaky-tests,skipFrontendBuild
          -Dit.test=io/camunda/v2/**
          -Dcamunda.it.database.type=es
          -pl 'qa/integration-tests'
          verify
          | tee "${BUILD_OUTPUT_FILE_PATH}"
      - name: Analyze Test Runs
        id: analyze-test-run
        if: always()
        uses: ./.github/actions/analyze-test-runs
        with:
          buildOutputFilePath: ${{ env.BUILD_OUTPUT_FILE_PATH }}
      - name: Upload test artifacts
        uses: ./.github/actions/collect-test-artifacts
        if: ${{ failure() || cancelled() || steps.analyze-test-run.outputs.flakyTests != '' }}
        with:
          name: "[IT] Elasticsearch"
      - name: Observe build status
        if: always()
        continue-on-error: true
        uses: ./.github/actions/observe-build-status
        with:
          job_name: "integration-tests/elasticsearch"
          build_status: ${{ job.status }}
          user_reason: ${{ (steps.analyze-test-run.outputs.flakyTests != '') && 'flaky-tests' || '' }}
          user_description: ${{ steps.analyze-test-run.outputs.flakyTests }}
          secret_vault_secretId: ${{ secrets.VAULT_SECRET_ID }}
          secret_vault_address: ${{ secrets.VAULT_ADDR }}
          secret_vault_roleId: ${{ secrets.VAULT_ROLE_ID }}
