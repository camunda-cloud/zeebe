---
name: Setup Yarn Cache


description: Configured GHA cache for Yarn global cache dir (no save on PRs), see https://github.com/camunda/camunda/wiki/CI-&-Automation#caching-strategy

inputs:
  directory:
    description: Directory of the project for which Yarn to GHA cache should be configured
    required: true

runs:
  using: composite
  steps:
  - name: Get Yarn global cache directory
    id: get-yarn-global-cache-dir
    shell: bash
    working-directory: ${{ inputs.directory }}
    run: |
      yarn_version=$(yarn --version)

      if [[ $yarn_version == 1* ]]; then
        echo "result=$(yarn cache dir)" >> $GITHUB_OUTPUT
      else
        echo "result=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      fi

  - name: Save global Yarn cache on non-PRs
    if: startsWith(github.ref_name, 'stable') || github.ref_name == 'main'
    uses: actions/cache@v4
    with:
      path: "${{ steps.get-yarn-global-cache-dir.outputs.result }}"
      # it matters for caching as absolute paths on self-hosted and Github runners differ
      # self-hosted: `/runner/` vs gh-hosted: `/home/runner`
      key: ${{ runner.environment }}-${{ runner.os }}-yarn-${{ hashFiles(format('{0}/yarn.lock', inputs.directory)) }}
      restore-keys: |
        ${{ runner.environment }}-${{ runner.os }}-yarn

  - name: Restore global Yarn cache always
    # Restore cache (but don't save it) if we're not on main or stable/* branches
    if: ${{ !(startsWith(github.ref_name, 'stable') || github.ref_name == 'main') }}
    uses: actions/cache/restore@v4
    with:
      path: "${{ steps.get-yarn-global-cache-dir.outputs.result }}"
      key: ${{ runner.environment }}-${{ runner.os }}-yarn-${{ hashFiles(format('{0}/yarn.lock', inputs.directory)) }}
      restore-keys: |
        ${{ runner.environment }}-${{ runner.os }}-yarn
