services:
  elasticsearch-old:
    image: docker.elastic.co/elasticsearch/elasticsearch:${OLD_ES_VERSION:-8.13.0}
    container_name: upgrade-schema-tests-old-elasticsearch-version
    volumes:
      - essnapshot:/var/tmp:rw
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - path.repo=/var/tmp
      - xpack.security.enabled=false
      - action.destructive_requires_name=false
      - cluster.routing.allocation.disk.watermark.low=90%
      - cluster.routing.allocation.disk.watermark.high=95%
      - cluster.routing.allocation.disk.watermark.high.max_headroom=150GB

    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "${OLD_ES_PORT:-9250}:9200"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cat/health | grep -q green" ]
      interval: 10s
      timeout: 5s
      retries: 10
  elasticsearch-new:
    image: docker.elastic.co/elasticsearch/elasticsearch:${NEW_ES_VERSION:-8.13.0}
    container_name: upgrade-schema-tests-new-elasticsearch-version
    volumes:
      - essnapshot:/var/tmp:rw
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - path.repo=/var/tmp
      - xpack.security.enabled=false
      - action.destructive_requires_name=false
      - cluster.routing.allocation.disk.watermark.low=90%
      - cluster.routing.allocation.disk.watermark.high=95%
      - cluster.routing.allocation.disk.watermark.high.max_headroom=150GB

    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "${NEW_ES_PORT:-9200}:9200"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cat/health | grep -q green" ]
      interval: 10s
      timeout: 5s
      retries: 10
  # dummy container to wait for all others to be healthy and block docker-compose up until that happened
  wait_until_ready:
    image: docker.elastic.co/elasticsearch/elasticsearch:${NEW_ES_VERSION:-8.13.0}
    container_name: wait_until_ready
    command: /usr/bin/true
    depends_on: {
      "elasticsearch-old": { "condition": "service_healthy" },
      "elasticsearch-new": { "condition": "service_healthy" }
    }
volumes:
  essnapshot:
