<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under
  ~ one or more contributor license agreements. See the NOTICE file distributed
  ~ with this work for additional information regarding copyright ownership.
  ~ Licensed under the Camunda License 1.0. You may not use this file
  ~ except in compliance with the Camunda License 1.0.
  -->
<bpmn2:definitions xmlns:bpmn2="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" id="_5SVkEIXnEeSmwfgVk-ryvQ" targetNamespace="http://camunda.org/schema/1.0/bpmn" exporter="Camunda Modeler" exporterVersion="3.6.0" xsi:schemaLocation="http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd">
  <bpmn2:collaboration id="Collaboration_1u35ano">
    <bpmn2:participant id="Participant_0477s11" name="Camunda Customer Onboarding Demo" processRef="customer_onboarding_en" />
  </bpmn2:collaboration>
  <bpmn2:process id="customer_onboarding_en" name="Customer Onboarding" isExecutable="true">
    <bpmn2:startEvent id="StartEvent_1" name="Application received" camunda:asyncAfter="true" camunda:formKey="app:camunda/online/index.html">
      <bpmn2:extensionElements>
        <camunda:properties>
          <camunda:property name="simNextFire" value="${g.timesPerDay(&#34;onboard&#34;,&#34;07:30&#34;,&#34;22:30&#34;, g.linearBySimulationTime(5,15))}" />
          <camunda:property name="simInitPayload" value="application=${g.json(generator.newApplication(false))}" />
          <camunda:property name="simGeneratePayload" value="applicationNumber=${application.getApplicationNumber()}" />
          <camunda:property name="simGeneratePayload" value="applicantName=${application.getApplicant().getName()}" />
          <camunda:property name="simInitBusinessKey" value="A-${g.format1(&#39;%05d&#39;, g.uniqueNumber())}" />
          <camunda:property name="simGeneratePayload" value="category=${application.getCategory()}" />
          <camunda:property name="simKeepListeners" value="true" />
        </camunda:properties>
        <camunda:executionListener delegateExpression="${corporationMapper}" event="start" />
      </bpmn2:extensionElements>
      <bpmn2:outgoing>SequenceFlow_6</bpmn2:outgoing>
    </bpmn2:startEvent>
    <bpmn2:exclusiveGateway id="ExclusiveGateway_2" name="Decision?">
      <bpmn2:extensionElements>
        <camunda:properties>
          <camunda:property name="simulateKeepImplementation" value="true" />
        </camunda:properties>
      </bpmn2:extensionElements>
      <bpmn2:incoming>SequenceFlow_1h4oxvl</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_8</bpmn2:outgoing>
      <bpmn2:outgoing>SequenceFlow_12</bpmn2:outgoing>
    </bpmn2:exclusiveGateway>
    <bpmn2:endEvent id="EndEvent_ApplicationIssued" name="Application&#10; issued">
      <bpmn2:extensionElements>
        <camunda:properties>
          <camunda:property name="KPI-Ratio" value="Policed" />
        </camunda:properties>
      </bpmn2:extensionElements>
      <bpmn2:incoming>SequenceFlow_11</bpmn2:incoming>
    </bpmn2:endEvent>
    <bpmn2:sendTask id="SendTask_SendPolicy" name="Send confirmation" camunda:async="true" camunda:type="external" camunda:topic="emailService">
      <bpmn2:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="mailBody">
            <camunda:script scriptFormat="freemarker">Dear ${application.applicant.name}.

              We happily inform you that your request was accepted.

              Please check the key facts:
              - Application Number: ${application.applicationNumber}
              - Premium per anno: ${application.premium}
              - Product: ${application.product}

              Kind regards,
              ${application.corporation}.</camunda:script>
          </camunda:inputParameter>
          <camunda:inputParameter name="mailSubject">Your request was issued</camunda:inputParameter>
        </camunda:inputOutput>
        <camunda:properties>
          <camunda:property name="simNextFire" value="${g.now()}" />
        </camunda:properties>
      </bpmn2:extensionElements>
      <bpmn2:incoming>SequenceFlow_10</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_11</bpmn2:outgoing>
    </bpmn2:sendTask>
    <bpmn2:serviceTask id="ServiceTask_DeliverPolicy" name="Deliver confirmation" camunda:delegateExpression="${issuePolicyAdapter}">
      <bpmn2:extensionElements>
        <camunda:properties>
          <camunda:property name="simCallRealImplementation" value="true" />
        </camunda:properties>
      </bpmn2:extensionElements>
      <bpmn2:incoming>SequenceFlow_8</bpmn2:incoming>
      <bpmn2:incoming>SequenceFlow_7</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_10</bpmn2:outgoing>
    </bpmn2:serviceTask>
    <bpmn2:businessRuleTask id="BusinessRuleTask_CheckApplicationAutomatically" name="Check application automatically" camunda:resultVariable="riskDMNresult" camunda:decisionRef="checkRisk_en">
      <bpmn2:extensionElements>
        <camunda:executionListener class="com.camunda.demo.customeronboarding.adapter.MapDmnResult" event="end" />
        <camunda:properties>
          <camunda:property name="simCallRealImplementation" value="true" />
          <camunda:property name="simKeepListeners" value="true" />
        </camunda:properties>
        <camunda:executionListener event="start">
          <camunda:script scriptFormat="javascript">if(execution.hasVariable("riskDMNresult")) {
            execution.removeVariable("riskDMNresult");
            }</camunda:script>
        </camunda:executionListener>
      </bpmn2:extensionElements>
      <bpmn2:incoming>SequenceFlow_1gd6p37</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_2</bpmn2:outgoing>
    </bpmn2:businessRuleTask>
    <bpmn2:exclusiveGateway id="ExclusiveGatewayPruefung" name="Risk?">
      <bpmn2:extensionElements>
        <camunda:properties>
          <camunda:property name="simulateKeepImplementation" value="true" />
        </camunda:properties>
      </bpmn2:extensionElements>
      <bpmn2:incoming>SequenceFlow_2</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_7</bpmn2:outgoing>
      <bpmn2:outgoing>SequenceFlow_16</bpmn2:outgoing>
      <bpmn2:outgoing>SequenceFlow_3</bpmn2:outgoing>
    </bpmn2:exclusiveGateway>
    <bpmn2:endEvent id="EndEvent_DecisionAccelerated" name="Decision accelerated">
      <bpmn2:incoming>SequenceFlow_5</bpmn2:incoming>
    </bpmn2:endEvent>
    <bpmn2:endEvent id="EndEvent_ApplicationRejected" name="Application &#10;rejected">
      <bpmn2:extensionElements>
        <camunda:properties>
          <camunda:property name="KPI-Ratio" value="Rejected" />
        </camunda:properties>
      </bpmn2:extensionElements>
      <bpmn2:incoming>SequenceFlow_13</bpmn2:incoming>
    </bpmn2:endEvent>
    <bpmn2:serviceTask id="ServiceTask_RejectPolicy" name="Reject application" camunda:delegateExpression="${loggerDelegate}">
      <bpmn2:incoming>SequenceFlow_12</bpmn2:incoming>
      <bpmn2:incoming>SequenceFlow_16</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_01vh1zw</bpmn2:outgoing>
    </bpmn2:serviceTask>
    <bpmn2:sendTask id="SendTask_SendRejection" name="Send rejection" camunda:async="true" camunda:type="external" camunda:topic="emailService">
      <bpmn2:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="mailBody">
            <camunda:script scriptFormat="freemarker">Dear ${application.applicant.name}.

              Unfortunately we have to inform you that we cannot issue the desired request.

              Kind regards,
              ${application.corporation}.</camunda:script>
          </camunda:inputParameter>
          <camunda:inputParameter name="mailSubject">Request rejected</camunda:inputParameter>
        </camunda:inputOutput>
        <camunda:properties>
          <camunda:property name="simNextFire" value="${g.now()}" />
        </camunda:properties>
      </bpmn2:extensionElements>
      <bpmn2:incoming>SequenceFlow_01vh1zw</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_13</bpmn2:outgoing>
    </bpmn2:sendTask>
    <bpmn2:userTask id="UserTask_DecideOnApplication" name="Decide on application" camunda:asyncAfter="true" camunda:formKey="embedded:app:forms/decide_en.html" camunda:candidateGroups="clerk" camunda:dueDate="${dateTime().plusDays(1).toDate()}">
      <bpmn2:extensionElements>
        <camunda:properties>
          <camunda:property name="simGeneratePayload" value="approved=${g.randBool(0.75)}" />
          <camunda:property name="simNextFire" value="${g.nowPlusHours(g.uniformInt(g.exponentialBySimulationTime(1,48,3),72))}" />
          <camunda:property name="simKeepListeners" value="true" />
          <camunda:property name="simGeneratePayload" value="requestedDocumentDescription=someDocument" />
        </camunda:properties>
        <camunda:taskListener event="create">
          <camunda:script scriptFormat="JavaScript">task.setVariable('documentReferenceId', String(Date.now()));

            var lastAssignee = task.getVariable('lastAssignee');
            if (lastAssignee != null) {
            task.setAssignee(lastAssignee);
            }</camunda:script>
        </camunda:taskListener>
        <camunda:taskListener event="assignment">
          <camunda:script scriptFormat="JavaScript">task.setVariable('lastAssignee', task.getAssignee());</camunda:script>
        </camunda:taskListener>
      </bpmn2:extensionElements>
      <bpmn2:incoming>SequenceFlow_1te4zir</bpmn2:incoming>
      <bpmn2:incoming>SequenceFlow_3</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_1h4oxvl</bpmn2:outgoing>
    </bpmn2:userTask>
    <bpmn2:callActivity id="CallActivity_RequestDocument" name="Request document" calledElement="requestDocument_en">
      <bpmn2:extensionElements>
        <camunda:in source="application" target="application" />
        <camunda:in source="requestedDocumentDescription" target="requestedDocumentDescription" />
        <camunda:out source="document" target="document" />
        <camunda:executionListener event="end">
          <camunda:script scriptFormat="JavaScript">var typedDocument = execution.getVariableTyped('document');
            var oldDocuments = execution.getVariable('documents');

            if (typedDocument != null &amp;&amp; typedDocument.getValue() != null) {
            execution.setVariable('document_' + documentReferenceId, typedDocument);

            var json = S('{}');
            json.prop('description', requestedDocumentDescription);
            json.prop('filename', typedDocument.getFilename());

            var documents = S(oldDocuments != null ? oldDocuments : '{}');
            documents.prop(documentReferenceId, json);
            execution.setVariable('documents', documents);
            }</camunda:script>
        </camunda:executionListener>
        <camunda:in source="documentReferenceId" target="documentReferenceId" />
        <camunda:in source="uiBaseUrl" target="uiBaseUrl" />
        <camunda:properties>
          <camunda:property name="simKeepListeners" value="true" />
        </camunda:properties>
        <camunda:in businessKey="#{execution.processBusinessKey}" />
      </bpmn2:extensionElements>
      <bpmn2:incoming>SequenceFlow_0lwkj1f</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_1te4zir</bpmn2:outgoing>
    </bpmn2:callActivity>
    <bpmn2:userTask id="UserTask_AccelerateDecision" name="Accelerate decision making" camunda:candidateGroups="teamlead">
      <bpmn2:extensionElements>
        <camunda:properties>
          <camunda:property name="simNextComplete" value="${g.nowPlusHours(g.uniformInt(2,10))}" />
        </camunda:properties>
      </bpmn2:extensionElements>
      <bpmn2:incoming>SequenceFlow_0o6gf8v</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_5</bpmn2:outgoing>
    </bpmn2:userTask>
    <bpmn2:serviceTask id="ServiceTask_0tixwo5" name="Get credit score" camunda:delegateExpression="${calculateScore}">
      <bpmn2:extensionElements>
        <camunda:properties>
          <camunda:property name="simCallRealImplementation" value="true" />
        </camunda:properties>
      </bpmn2:extensionElements>
      <bpmn2:incoming>SequenceFlow_6</bpmn2:incoming>
      <bpmn2:outgoing>SequenceFlow_1gd6p37</bpmn2:outgoing>
    </bpmn2:serviceTask>
    <bpmn2:boundaryEvent id="BoundaryEvent_1i1spfe" name="document needed" attachedToRef="UserTask_DecideOnApplication">
      <bpmn2:extensionElements>
        <camunda:properties>
          <camunda:property name="simNextFire" value="${generator.nowPlusHours(generator.uniformInt(24,72))}" />
          <camunda:property name="simGeneratePayload" value="requestedDocumentDescription=&#34;very important document&#34;" />
          <camunda:property name="simGeneratePayload" value="uiBaseUrl=&#34;camunda.com&#34;" />
          <camunda:property name="simGeneratePayload" value="documentReferenceId=&#34;123456&#34;" />
        </camunda:properties>
      </bpmn2:extensionElements>
      <bpmn2:outgoing>SequenceFlow_0lwkj1f</bpmn2:outgoing>
      <bpmn2:messageEventDefinition messageRef="Message_0fvpzfg" />
    </bpmn2:boundaryEvent>
    <bpmn2:boundaryEvent id="BoundaryEvent_0mcjys5" name="after 2 days" cancelActivity="false" attachedToRef="UserTask_DecideOnApplication">
      <bpmn2:outgoing>SequenceFlow_0o6gf8v</bpmn2:outgoing>
      <bpmn2:timerEventDefinition>
        <bpmn2:timeDuration xsi:type="bpmn2:tFormalExpression">P2D</bpmn2:timeDuration>
      </bpmn2:timerEventDefinition>
    </bpmn2:boundaryEvent>
    <bpmn2:sequenceFlow id="SequenceFlow_1gd6p37" sourceRef="ServiceTask_0tixwo5" targetRef="BusinessRuleTask_CheckApplicationAutomatically" />
    <bpmn2:sequenceFlow id="SequenceFlow_0o6gf8v" sourceRef="BoundaryEvent_0mcjys5" targetRef="UserTask_AccelerateDecision" />
    <bpmn2:sequenceFlow id="SequenceFlow_0lwkj1f" sourceRef="BoundaryEvent_1i1spfe" targetRef="CallActivity_RequestDocument" />
    <bpmn2:sequenceFlow id="SequenceFlow_1te4zir" sourceRef="CallActivity_RequestDocument" targetRef="UserTask_DecideOnApplication" />
    <bpmn2:sequenceFlow id="SequenceFlow_01vh1zw" sourceRef="ServiceTask_RejectPolicy" targetRef="SendTask_SendRejection" />
    <bpmn2:sequenceFlow id="SequenceFlow_13" name="" sourceRef="SendTask_SendRejection" targetRef="EndEvent_ApplicationRejected" />
    <bpmn2:sequenceFlow id="SequenceFlow_5" name="" sourceRef="UserTask_AccelerateDecision" targetRef="EndEvent_DecisionAccelerated" />
    <bpmn2:sequenceFlow id="SequenceFlow_16" name="red &#10;(severe risk)" sourceRef="ExclusiveGatewayPruefung" targetRef="ServiceTask_RejectPolicy">
      <bpmn2:conditionExpression xsi:type="bpmn2:tFormalExpression">#{riskLevel == 'red'}</bpmn2:conditionExpression>
    </bpmn2:sequenceFlow>
    <bpmn2:sequenceFlow id="SequenceFlow_3" name="yellow&#10;(moderate risk)&#10;" sourceRef="ExclusiveGatewayPruefung" targetRef="UserTask_DecideOnApplication">
      <bpmn2:conditionExpression xsi:type="bpmn2:tFormalExpression">#{riskLevel == 'yellow'}</bpmn2:conditionExpression>
    </bpmn2:sequenceFlow>
    <bpmn2:sequenceFlow id="SequenceFlow_2" name="" sourceRef="BusinessRuleTask_CheckApplicationAutomatically" targetRef="ExclusiveGatewayPruefung" />
    <bpmn2:sequenceFlow id="SequenceFlow_7" name="green&#10;(no risk)" sourceRef="ExclusiveGatewayPruefung" targetRef="ServiceTask_DeliverPolicy">
      <bpmn2:conditionExpression xsi:type="bpmn2:tFormalExpression">#{riskLevel == 'green'}</bpmn2:conditionExpression>
    </bpmn2:sequenceFlow>
    <bpmn2:sequenceFlow id="SequenceFlow_10" name="" sourceRef="ServiceTask_DeliverPolicy" targetRef="SendTask_SendPolicy" />
    <bpmn2:sequenceFlow id="SequenceFlow_11" name="" sourceRef="SendTask_SendPolicy" targetRef="EndEvent_ApplicationIssued" />
    <bpmn2:sequenceFlow id="SequenceFlow_8" name="application accepted" camunda:modelerTemplate="com.camunda.demo.environment.probability" sourceRef="ExclusiveGateway_2" targetRef="ServiceTask_DeliverPolicy">
      <bpmn2:conditionExpression xsi:type="bpmn2:tFormalExpression">#{approved}</bpmn2:conditionExpression>
    </bpmn2:sequenceFlow>
    <bpmn2:sequenceFlow id="SequenceFlow_12" name="application declined" sourceRef="ExclusiveGateway_2" targetRef="ServiceTask_RejectPolicy">
      <bpmn2:conditionExpression xsi:type="bpmn2:tFormalExpression">#{not approved}</bpmn2:conditionExpression>
    </bpmn2:sequenceFlow>
    <bpmn2:sequenceFlow id="SequenceFlow_1h4oxvl" sourceRef="UserTask_DecideOnApplication" targetRef="ExclusiveGateway_2" />
    <bpmn2:sequenceFlow id="SequenceFlow_6" name="" sourceRef="StartEvent_1" targetRef="ServiceTask_0tixwo5" />
  </bpmn2:process>
  <bpmn2:message id="Message_0fvpzfg" name="Message_DocumentRequested" />
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Collaboration_1u35ano">
      <bpmndi:BPMNShape id="Participant_0477s11_di" bpmnElement="Participant_0477s11" isHorizontal="true">
        <dc:Bounds x="156" y="71" width="1360" height="563" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn2:definitions>
